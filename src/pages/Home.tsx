import React from 'react';

import { useAppSelector } from '../redux/store';
import { selectProducts } from '../redux/product/selectors';
import { Product } from '../redux/product/types';

import {
  ContactOfPromo,
  CarouselOfPromo,
  TimerOfPromo,
  MoreButton,
  Sort,
  Loader,
  ProductBlock,
  Sidebar,
} from '../components';
import { Pagination } from '../components/Pagination';

const Home: React.FC = () => {
  const { products, status, total } = useAppSelector(selectProducts);

  const productBlocks = products.map((obj: Product) => <ProductBlock key={obj._id} {...obj} />);

  return (
    <>
      <div className="promo">
        <div className="container">
          <div className="promo-blocks">
            <ContactOfPromo />
            <CarouselOfPromo />
            <TimerOfPromo />
          </div>
        </div>
      </div>
      <div className="container padding-bottom">
        {status === 'loading' ? (
          <div className="page__title skeleton"></div>
        ) : (
          <div className="page__title">
            <h1 className="title">–ö–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä—ã (—Å–ø–ª–∏—Ç-—Å–∏—Å—Ç–µ–º—ã)</h1>
            <span> {total} —Ç–æ–≤–∞—Ä–æ–≤</span>
          </div>
        )}
        <div className="vitrina">
          <Sidebar />
          <div className="right-bar">
            <Sort />
            <div className="products-container">
              {status === 'error' ? (
                <div>
                  <h2>–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ üòï</h2>
                  <p>
                    –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ç–æ–≤–∞—Ä—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –ø–æ–ø—ã—Ç–∫—É –ø–æ–∑–∂–µ.
                  </p>
                </div>
              ) : status === 'loading' ? (
                <Loader className={'product-block'} />
              ) : (
                productBlocks
              )}
            </div>
            <MoreButton />
            <Pagination />
          </div>
        </div>
      </div>
    </>
  );
};

export default Home;
